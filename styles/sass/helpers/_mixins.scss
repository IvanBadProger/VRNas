@use './variables' as *;

/// Миксин для решения проблемы "залипания" на экранах без hover эффекта.
/// 
/// Этот миксин создает две директивы медиа (если $hasActiveEffectOnMobile = true):
/// - Первая директива применяется на экранах с hover эффектом (ПК, ноутбук).
/// - Вторая директива применяется на экранах с тач эффектом (телефон, планшет).
/// 
/// @param {boolean} $hasActiveEffectOnMobile [true] - параметр, указывающий, будет ли эффект активен на устройствах без hover эффекта.
/// @content [стили, которые должны быть применены к элементу]
/// 
/// @example
/// .button {
///   @include hover { 
///     background-color: blue; 
///   }
/// }
/// 
@mixin hover($hasActiveEffectOnMobile: true) {
  @media (any-hover: hover) {
    &:hover {
      @content;
    }
  }

  @if ($hasActiveEffectOnMobile) {
    @media (any-hover: none) {
      &:active {
        @content;
      }
    }
  }
}


/// Задает элементу квадратные размеры.
/// 
/// @require @param {number} $size - значение стороны квадрата. Должен быть положительным числом.
/// 
/// @example
/// .square-box {
///   @include square(100px);
/// }
/// 
@mixin square($size) {
  @if not $size {
    @error "Не указан размер фигуры. Пожалуйста, передайте в аргумент миксина желаемое значение.";
  }

  width: $size;
  height: $size;
}


/// Задает элемент круглым.
/// 
/// @require @param {number} $size - размер круга. Должен быть положительным числом.
/// 
/// @example
/// .circle-box {
///   @include circle(50px);
/// }
/// 
@mixin circle($size) {
  @include square($size);
  border-radius: 50%;
}


/// Миксин, выравнивающий элемент по центру с помощью абсолютного позиционирования.
/// 
/// @param {x | y | null} $direction [null] - указывает направление выравнивания (ось x, y или по обеим осям, если null).
/// 
/// @example
/// .centered {
///   @include abs-center(null);
/// }
/// 
@mixin abs-center($direction: null) {
  position: absolute;

  @if $direction ==x {
    top: 50%;
    transform: translateY(-50%);
  }

  @else if $direction ==y {
    left: 50%;
    transform: translateX(-50%);
  }

  @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}


// Брейкпоинты для медиа запросов. Ширины экранов, под которые пишется адаптив
$breakpoints: (
  laptop-large: 1440,
  laptop: 1280,
  tablet: 1000,
  mobile: 750,
);


/// Миксин для упрощенного написания медиа-запросов.
/// 
/// @require @param {mobile | tablet | laptop | laptop-large} $breakpoint - брейкпоинт, размер экрана, к которому применяются стили.
/// @content [стили, которые должны быть применены к указанному брейкпоинту]
/// 
/// @example
/// @include media(laptop) {
///   font-size: 14px;
/// }
/// 
@mixin media($breakpoint) {
  $max-width: map-get($breakpoints, $breakpoint);

  @if $max-width {
    @media (max-width: #{$max-width}px) {
      @content;
    }
  }

  @else {
    @error "Неизвестный брейкпоинт: #{$breakpoint}. Доступные брейкпоинты: mobile, tablet, laptop, laptop-large.";
  }
}


/// Миксин упрощающий работу с display: flex
/// 
/// @param {center | between | around} $justify [center] - направление основной оси
/// 
/// 
/// Миксин для создания flex-контейнера с возможностью настройки выравнивания элементов по оси X.
/// 
/// @param {String} $justify - Указывает, как выравнивать элементы по оси X.
/// 
@mixin flex($justify: center) {
  display: flex;
  align-items: center;

  @if $justify ==center {
    justify-content: center;
  }

  @else if $justify ==between {
    justify-content: space-between;
  }

  @else if $justify ==around {
    justify-content: space-around;
  }
}


/// Миксин для добавления свечения на заднем фоне.
/// На макете он определенной формы в SVG формате,
/// используется псевдоэлемент `::after` для отображения SVG-фона.
/// fix: Добавить relative на родителя и убрать где надо
/// @note Убедитесь, что путь к SVG изображению правильный.
/// 
@mixin light {
  &::after {
    @include abs-center();
    @include square(100%);
    content: url('../../assets/svg/light.svg');
    z-index: -1;
    pointer-events: none;
  }
}


/// Миксин для создания градиентной рамки (border) на круглых элементах.
/// 
/// @note Убедитесь, что элемент имеет свойство `position: relative;`
/// для корректного отображения псевдоэлемента.
/// 
@mixin border-gradient-rounded {
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 50%;
    padding: 1px;
    transition-duration: $transition-duration;
    background: $color-gradient border-box;
    mask:
      linear-gradient(#000 0 0) content-box,
      linear-gradient(#000 0 0);
    mask-composite: exclude;
  }
}